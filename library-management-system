#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_BOOKS 100

typedef struct {
    char isbn[20];
    char title[100];
    char author[100];
    int year;
} Book;

void addBook(Book books[], int *count) {
    if (*count >= MAX_BOOKS) {
        printf("Cannot add more books. Maximum limit reached.\n");
        return;
    }
    printf("Enter ISBN: ");
    scanf("%s", books[*count].isbn);
    printf("Enter Title: ");
    scanf(" %[^\n]s", books[*count].title);
    printf("Enter Author: ");
    scanf(" %[^\n]s", books[*count].author);
    printf("Enter Year: ");
    scanf("%d", &books[*count].year);
    (*count)++;
    printf("Book added successfully!\n");
}

void displayBooks(const Book books[], int count) {
    if (count == 0) {
        printf("No books to display.\n");
        return;
    }
    for (int i = 0; i < count; i++) {
        printf("Book %d:\n", i + 1);
        printf("ISBN: %s\n", books[i].isbn);
        printf("Title: %s\n", books[i].title);
        printf("Author: %s\n", books[i].author);
        printf("Year: %d\n\n", books[i].year);
    }
}

int searchBookByISBN(const Book books[], int count, const char *isbn) {
    for (int i = 0; i < count; i++) {
        if (strcmp(books[i].isbn, isbn) == 0) {
            return i;
        }
    }
    return -1;
}

void searchBookByAuthor(const Book books[], int count, const char *author) {
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strcmp(books[i].author, author) == 0) {
            printf("ISBN: %s, Title: %s, Year: %d\n", books[i].isbn, books[i].title, books[i].year);
            found = 1;
        }
    }
    if (!found) {
        printf("No books found by this author.\n");
    }
}

void searchBookByTitle(const Book books[], int count, const char *title) {
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strcmp(books[i].title, title) == 0) {
            printf("ISBN: %s, Author: %s, Year: %d\n", books[i].isbn, books[i].author, books[i].year);
            found = 1;
        }
    }
    if (!found) {
        printf("No books found with this title.\n");
    }
}

void updateBook(Book books[], int count, const char *isbn) {
    int index = searchBookByISBN(books, count, isbn);
    if (index == -1) {
        printf("Book not found.\n");
        return;
    }
    printf("Updating book with ISBN %s:\n", isbn);
    printf("Enter new Title: ");
    scanf(" %[^\n]s", books[index].title);
    printf("Enter new Author: ");
    scanf(" %[^\n]s", books[index].author);
    printf("Enter new Year: ");
    scanf("%d", &books[index].year);
    printf("Book updated successfully!\n");
}

void deleteBook(Book books[], int *count, const char *isbn) {
    int index = searchBookByISBN(books, *count, isbn);
    if (index == -1) {
        printf("Book not found.\n");
        return;
    }
    for (int i = index; i < (*count) - 1; i++) {
        books[i] = books[i + 1];
    }
    (*count)--;
    printf("Book deleted successfully!\n");
}

void saveToFile(const Book books[], int count, const char *filename) {
    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        printf("Error opening file for writing.\n");
        return;
    }
    fwrite(&count, sizeof(int), 1, file);
    fwrite(books, sizeof(Book), count, file);
    fclose(file);
    printf("Books saved to file successfully!\n");
}

void loadFromFile(Book books[], int *count, const char *filename) {
    FILE *file = fopen(filename, "r");
    if (file == NULL) {
        printf("Error opening file for reading.\n");
        return;
    }
    fread(count, sizeof(int), 1, file);
    fread(books, sizeof(Book), *count, file);
    fclose(file);
    printf("Books loaded from file successfully!\n");
}

int main() {
    Book books[MAX_BOOKS];
    int count = 0;
    int choice;
    char isbn[20], author[100], title[100];
    const char *filename = "library_records.dat";

    loadFromFile(books, &count, filename);

    while (1) {
        printf("\nLibrary Management System\n");
        printf("1. Add a new book record\n");
        printf("2. Display all book records\n");
        printf("3. Search a book by ISBN\n");
        printf("4. Search a book by Author\n");
        printf("5. Search a book by Title\n");
        printf("6. Update a book record\n");
        printf("7. Delete a book record\n");
        printf("8. Save book records to a file\n");
        printf("9. Load book records from a file\n");
        printf("10. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addBook(books, &count);
                break;
            case 2:
                displayBooks(books, count);
                break;
            case 3:
                printf("Enter ISBN: ");
                scanf("%s", isbn);
                int index = searchBookByISBN(books, count, isbn);
                if (index != -1) {
                    printf("ISBN: %s, Title: %s, Author: %s, Year: %d\n", books[index].isbn, books[index].title, books[index].author, books[index].year);
                } else {
                    printf("Book not found.\n");
                }
                break;
            case 4:
                printf("Enter Author: ");
                scanf(" %[^\n]s", author);
                searchBookByAuthor(books, count, author);
                break;
            case 5:
                printf("Enter Title: ");
                scanf(" %[^\n]s", title);
                searchBookByTitle(books, count, title);
                break;
            case 6:
                printf("Enter ISBN of the book to update: ");
                scanf("%s", isbn);
                updateBook(books, count, isbn);
                break;
            case 7:
                printf("Enter ISBN of the book to delete: ");
                scanf("%s", isbn);
                deleteBook(books, &count, isbn);
                break;
            case 8:
                saveToFile(books, count, filename);
                break;
            case 9:
                loadFromFile(books, &count, filename);
                break;
            case 10:
                saveToFile(books, count, filename);
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
